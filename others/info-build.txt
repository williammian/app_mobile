Build app_mobile

--------------------------------------------

Alterar a versão

Antes de compilar é necessário alterar a versão no arquivo pubspec.yaml

    tag version

--------------------------------------------

Compilar app_mobile

Seguir a documentação do Flutter a partir do “Create an upload keystore”.

- https://docs.flutter.dev/deployment/android#create-an-upload-keystore

keytool -genkey -v -keystore c:\Users\USER_NAME\upload-keystore.jks -storetype JKS -keyalg RSA -keysize 2048 -validity 10000 -alias upload

--------------------------------------------

- https://docs.flutter.dev/deployment/android#reference-the-keystore-from-the-app

Create a file named [project]/android/key.properties

storePassword=<password from previous step>
keyPassword=<password from previous step>
keyAlias=upload
storeFile=<location of the key store file, such as /Users/<user name>/upload-keystore.jks>

---------------------------------------------

- https://docs.flutter.dev/deployment/android#configure-signing-in-gradle

editing the [project]/android/app/build.gradle file.

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
        ...
}

Load the key.properties file into the keystoreProperties object.

buildTypes {
    release {
        // TODO: Add your own signing config for the release build.
        // Signing with the debug keys for now,
        // so `flutter run --release` works.
        signingConfig signingConfigs.debug
    }
}

And replace it with the following signing configuration info:

signingConfigs {
    release {
        keyAlias keystoreProperties['keyAlias']
        keyPassword keystoreProperties['keyPassword']
        storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
        storePassword keystoreProperties['storePassword']
    }
}
buildTypes {
    release {
        signingConfig signingConfigs.release
    }
}

----------------------------------------------

Após configurado, buildar o App no formato .aab para publicar na Play Store.

- https://docs.flutter.dev/deployment/android#build-an-app-bundle

Enter cd [project]
Run flutter build appbundle
(Running flutter build defaults to a release build.)

The release bundle for your app is created at [project]/build/app/outputs/bundle/release/app.aab.

---------------------------------------------

- https://docs.flutter.dev/deployment/android#build-an-apk

Enter cd [project]
Run flutter build apk --split-per-abi
(The flutter build command defaults to --release.)

This command results in three APK files:

[project]/build/app/outputs/apk/release/app-armeabi-v7a-release.apk
[project]/build/app/outputs/apk/release/app-arm64-v8a-release.apk
[project]/build/app/outputs/apk/release/app-x86_64-release.apk

---------------------------------------------

Deploy app_mobile no Google Play

Acessar: https://play.google.com/console

---------------------------------------------

Gerar ícones para Android / IOS / macOS 

https://appicon.co/

https://www.geeksforgeeks.org/flutter-changing-app-icon/

---------------------------------------------

Habilitar permissões no Android

Open the AndroidManifest.xml file located at ./android/app/src/main and add the following line:

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.app_mobile">

    <uses-permission android:name="android.permission.BLUETOOTH"/>
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" />
    <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY"/>

   <application .......
   ......
   ......

----------------------------------------------

Alterando App Laucher Name 

https://medium.com/@vaibhavi.rana99/change-application-name-and-icon-in-flutter-bebbec297c57

Android

Inside, find <application>and change its android:label property with your desired app name.

android/app/src/main/AndroidManifest.xml

<application
        android:name="io.flutter.app.FlutterApplication"
        android:label="your_app_name"
        android:icon="@mipmap/ic_launcher">


IOS

ios/Runner/Info.plist

<key>CFBundleName</key>
<string>your_app_name</string>

----------------------------------------------